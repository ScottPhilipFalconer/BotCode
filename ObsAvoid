#define ECHO 12
#define TRIG 7

void setup()
{
  pinMode(ECHO,INPUT); 
  pinMode(TRIG,OUTPUT);
  Serial.begin(9600); 
  pinMode(5,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(8,OUTPUT); 
  pinMode(9,OUTPUT); 
  pinMode(10,OUTPUT);
  pinMode(11,OUTPUT); 
  delay(5000);
}

void loop()
{
  if(sonar_mm > 150 && sensorVal == 1/*&& inState "LineFollow"*/) //write code for LineFollow state
    int sensorVal = digitalRead(A0);
    leftForwards();       
    rightForwards();      
    analogWrite(5,/*sensorVal * */127);   
    analogWrite(6,/*sensorVal * */127);
  
  //this initial code will turn the value of the IR sensor into an integer of 1 or 0...
  //...and multiply this value by the desired speed. If it reads a 0 (no black line)...
  //...the speed will equal zero. This code will probably be changed. Oommented out.

  if(sonar_mm < 150)
    leftForwards();
    rightBackwards();
    analogWrite(5,64);
    analogWrite(6,64); 
    delay(1000); //This should turn the robot to the right for 1 second
    leftForwards();
    rightForwards();
    analogWrite(5,127);
    analogWrite(6,127);
    delay(1000); //this should have to robot go forward for 1 seconds
    leftBackwards();
    rightForwards();
    analogWrite(5,64);
    analogWrite(6,64);
    delay(1000); //this should turn the robot left for 1 second

    //this if statement should allow the robot to turn, go forward, and...
    //...turn back for the same duration as the initial turn.


  if(sonar_mm > 150 && sensorVal == 0 /*&& inState "ObsAvoid"*/) //write code for ObsAvoid state
    leftForwards();
    rightForwards();
    analogWrite(5,127);
    analogWrite(6,127);
    delay(2000);
    leftBackwards();
    rightForwards();
    analogWrite(5,64);
    analogWrite(6,64);
    delay(1000);    
    //This code should have the robot go forwards after it reaches the ned of the obstacle, then turn left...
    //...and go forwards again, this should eventually either bring it back to the track or to the obstacle...
    //...where it will begin the if statement for being within 150 mm. It should then follow the wall...
    //...back to the black line.
}

void leftForwards(void)
{
  digitalWrite(8,LOW); //IN1
  digitalWrite(9,HIGH); //IN2
}

void leftBackwards(void)
{
  digitalWrite(8,HIGH); //IN1
  digitalWrite(9,LOW); //IN2
}

void rightForwards(void)
{
  digitalWrite(10,LOW); //IN3
  digitalWrite(11,HIGH); //IN4
}

void rightBackwards(void)
{
  digitalWrite(10,HIGH); //IN3
  digitalWrite(11,LOW); //IN4
}

unsigned int sonar_mm(void)
{
  long duration = 0;
  const float speed_sound = 340.29;
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);
  duration = pulseIn(ECHO, HIGH); 
  return (unsigned int)(0.5 * duration * 1e-6 * speed_sound * 1e3);
}
